@startuml
skinparam linetype ortho
!$REMESH_COMPONENT = "true"

frame "Remesh Component" as RemeshComponent {
    interface IMeshBlockDetails
    IMeshBlockDetails : +IsSolid() Bool
    IMeshBlockDetails : +IsVisible() Bool
    IMeshBlockDetails : +GetTextureID(faceID) Integer
    IMeshBlockDetails : +GetMaterialID(faceID) Integer
    IMeshBlockDetails : +GetFaceRotation(faceID) FaceRotation

    class ChunkProperties
    ChunkProperties : -List<MeshBlockDetails>
    ChunkProperties : +GetSize() GridSize
    ChunkProperties : +GetBlock(blockPos) MeshBlockDetails
    ChunkProperties : +SetBlock(blockPos, blockDetails) void
    ChunkProperties --> IMeshBlockDetails

    class RemeshTaskStack
    RemeshTaskStack : -List<IRemeshTask>
    RemeshTaskStack : +AddTask(task) void
    RemeshTaskStack : +Finish() RemeshReport
    RemeshTaskStack --> IRemeshTask
    RemeshTaskStack --> RemeshReport
    RemeshTaskStack --> IVisualRemeshTask

    class LayeredProcMesh
    LayeredProcMesh : -List<ProcMesh>
    LayeredProcMesh <|-- ProcMesh

    class ProcMesh
    ProcMesh : +GetVertices() List<Vector3>
    ProcMesh : +GetNormals() List<Vector3>
    ProcMesh : +GetUVs() List<Vector3>
    ProcMesh : +GetVertices() List<Integer>

    class RemeshReport
    RemeshReport : -LayeredProcMesh visualMesh
    RemeshReport : -LayeredProcMesh collisionMesh
    RemeshReport : +GetVisualMesh() LayeredProcMesh
    RemeshReport : +GetCollisionMesh() LayeredProcMesh
    RemeshReport --> LayeredProcMesh

    class RemeshHandler
    RemeshHandler : -List<IRemeshDistributor>
    RemeshHandler : -List<RemeshTaskStack>
    RemeshHandler : +RemeshChunk(chunkProperties) void
    RemeshHandler : +FinishTasks() List<RemeshReport>
    RemeshHandler --> ChunkProperties

    interface IRemeshTask
    IRemeshTask : +Finish() ProcMesh
    IRemeshTask --> ProcMesh

    interface IVisualRemeshTask
    IVisualRemeshTask : +GetMaterialID() Integer
    IRemeshTask <|-- IVisualRemeshTask

    interface IRemeshDistributor
    IRemeshDistributor : +CreateTasks (chunkProperties, taskStack) void
    IRemeshDistributor --> ChunkProperties
    IRemeshDistributor --> RemeshTaskStack

    !if %variable_exists("$DATA_TYPES")
        ChunkProperties --> BlockPosition
        ChunkProperties --> GridSize
        ProcMesh --> Vector3
    !endif
}

@enduml